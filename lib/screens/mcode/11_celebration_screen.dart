import 'package:flutter/material.dart';
import 'package:flutter_animate/flutter_animate.dart';
import 'package:confetti/confetti.dart';
import '../../theme/app_theme.dart';
import '../../widgets/bottom_navigation.dart';

class CelebrationScreen extends StatefulWidget {
  const CelebrationScreen({super.key});

  @override
  State<CelebrationScreen> createState() => _CelebrationScreenState();
}

class _CelebrationScreenState extends State<CelebrationScreen> {
  late ConfettiController _confettiController;

  @override
  void initState() {
    super.initState();
    _confettiController = ConfettiController(duration: const Duration(seconds: 3));
    _confettiController.play();
  }

  @override
  void dispose() {
    _confettiController.dispose();
    super.dispose();
  }

  void _showMYCModal() {
    showDialog(
      context: context,
      builder: (context) => _buildMYCModal(),
    );
  }

  void _showXPModal() {
    showDialog(
      context: context,
      builder: (context) => _buildXPModal(),
    );
  }

  void _showProfileModal() {
    showDialog(
      context: context,
      builder: (context) => _buildProfileModal(),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.background,
      body: Stack(
        children: [
          // –ö–æ–Ω—Ç–µ–Ω—Ç
          SafeArea(
            child: SingleChildScrollView(
              padding: const EdgeInsets.all(24.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  const SizedBox(height: 40),

                  // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥—Ä–∏–±
                  Text(
                    'üçÑ',
                    style: const TextStyle(fontSize: 100),
                  )
                      .animate(
                        onPlay: (controller) => controller.repeat(),
                      )
                      .scale(
                        duration: 1500.ms,
                        begin: const Offset(1.0, 1.0),
                        end: const Offset(1.2, 1.2),
                        curve: Curves.easeInOut,
                      )
                      .then()
                      .scale(
                        duration: 1500.ms,
                        begin: const Offset(1.2, 1.2),
                        end: const Offset(1.0, 1.0),
                        curve: Curves.easeInOut,
                      ),

                  const SizedBox(height: 24),

                  // –ó–∞–≥–æ–ª–æ–≤–æ–∫
                  Text(
                    'üéâ –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú!',
                    style: AppTextStyles.h1.copyWith(fontSize: 32),
                    textAlign: TextAlign.center,
                  )
                      .animate()
                      .fadeIn(duration: 600.ms)
                      .slideY(begin: -0.3, end: 0, duration: 600.ms),

                  const SizedBox(height: 16),

                  Text(
                    '–¢—ã –∑–∞–≤–µ—Ä—à–∏–ª –£—Ä–æ–≤–µ–Ω—å 1\n–∏ –æ—Ç–∫—Ä—ã–ª –£—Ä–æ–≤–µ–Ω—å 2!',
                    style: AppTextStyles.h3,
                    textAlign: TextAlign.center,
                  )
                      .animate(delay: 400.ms)
                      .fadeIn(duration: 600.ms)
                      .slideY(begin: 0.2, end: 0, duration: 600.ms),

                  const SizedBox(height: 40),

                  Divider(color: Colors.white.withOpacity(0.2)),

                  const SizedBox(height: 32),

                  // –ù–∞–≥—Ä–∞–¥—ã
                  Text(
                    'üéÅ –¢–í–û–ò –ù–ê–ì–†–ê–î–´:',
                    style: AppTextStyles.h2.copyWith(fontSize: 22),
                  ).animate(delay: 800.ms).fadeIn(duration: 400.ms),

                  const SizedBox(height: 24),

                  // –ö–∞—Ä—Ç–æ—á–∫–∞ 1: MYC
                  _buildRewardCard(
                    emoji: 'üíé',
                    title: '+150 MYC',
                    subtitle: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≤–∞–ª—é—Ç–∞ Mycelium',
                    hint: '–¢–∞–ø –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π',
                    onTap: _showMYCModal,
                    delay: 1000,
                  ),

                  const SizedBox(height: 16),

                  // –ö–∞—Ä—Ç–æ—á–∫–∞ 2: XP
                  _buildRewardCard(
                    emoji: '‚ö°',
                    title: '+100 XP',
                    subtitle: '–û–ø—ã—Ç –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω—è',
                    hint: '–¢–∞–ø –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π',
                    onTap: _showXPModal,
                    delay: 1200,
                  ),

                  const SizedBox(height: 16),

                  // –ö–∞—Ä—Ç–æ—á–∫–∞ 3: –ü—Ä–æ—Ñ–∏–ª—å
                  _buildRewardCard(
                    emoji: 'üìä',
                    title: '–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –≥–æ—Ç–æ–≤!',
                    subtitle: '8 —Å—Ñ–µ—Ä –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω—ã',
                    hint: '–¢–∞–ø —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å',
                    onTap: _showProfileModal,
                    delay: 1400,
                  ),

                  const SizedBox(height: 40),

                  Divider(color: Colors.white.withOpacity(0.2)),

                  const SizedBox(height: 32),

                  // –ß—Ç–æ –¥–∞–ª—å—à–µ
                  Text(
                    'üí° –ß–¢–û –î–ê–õ–¨–®–ï?',
                    style: AppTextStyles.h2.copyWith(fontSize: 20),
                  ).animate(delay: 1600.ms).fadeIn(duration: 400.ms),

                  const SizedBox(height: 12),

                  Text(
                    '–£—Ä–æ–≤–µ–Ω—å 2 —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!',
                    style: AppTextStyles.body.copyWith(
                      color: Colors.white70,
                    ),
                  ).animate(delay: 1800.ms).fadeIn(duration: 400.ms),

                  const SizedBox(height: 8),

                  Text(
                    '–ù–æ–≤–∞—è —Å—Ñ–µ—Ä–∞ "–û—Ç–Ω–æ—à–µ–Ω–∏—è" –∂–¥—ë—Ç —Ç–µ–±—è',
                    style: AppTextStyles.body.copyWith(
                      color: Colors.white70,
                    ),
                  ).animate(delay: 1900.ms).fadeIn(duration: 400.ms),

                  const SizedBox(height: 32),

                  // –ö–Ω–æ–ø–∫–∞
                  SizedBox(
                    width: double.infinity,
                    height: 56,
                    child: ElevatedButton(
                      onPressed: () {
                        Navigator.of(context).pushReplacement(
                          MaterialPageRoute(
                            builder: (_) => const MainNavigator(),
                          ),
                        );
                      },
                      style: ElevatedButton.styleFrom(
                        backgroundColor: AppColors.primaryPurple,
                        foregroundColor: Colors.white,
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(16),
                        ),
                        elevation: 0,
                      ),
                      child: Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Text(
                            '–ü–µ—Ä–µ–π—Ç–∏ –∫ –£—Ä–æ–≤–Ω—é 2',
                            style: AppTextStyles.h3.copyWith(
                              color: Colors.white,
                            ),
                          ),
                          const SizedBox(width: 8),
                          const Icon(Icons.arrow_forward, size: 20),
                        ],
                      ),
                    ),
                  )
                      .animate(delay: 2000.ms)
                      .fadeIn(duration: 600.ms)
                      .slideY(begin: 0.3, end: 0, duration: 600.ms),

                  const SizedBox(height: 40),
                ],
              ),
            ),
          ),

          // –ö–æ–Ω—Ñ–µ—Ç—Ç–∏
          Align(
            alignment: Alignment.topCenter,
            child: ConfettiWidget(
              confettiController: _confettiController,
              blastDirectionality: BlastDirectionality.explosive,
              shouldLoop: false,
              colors: const [
                AppColors.primaryPurple,
                AppColors.accentBlue,
                AppColors.accent,
                AppColors.accentOrange,
                AppColors.success,
              ],
              numberOfParticles: 50,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildRewardCard({
    required String emoji,
    required String title,
    required String subtitle,
    required String hint,
    required VoidCallback onTap,
    required int delay,
  }) {
    return GestureDetector(
      onTap: onTap,
      child: Container(
        width: double.infinity,
        padding: const EdgeInsets.all(24),
        decoration: BoxDecoration(
          gradient: LinearGradient(
            colors: [
              AppColors.primaryPurple.withOpacity(0.2),
              AppColors.accentBlue.withOpacity(0.2),
            ],
          ),
          borderRadius: BorderRadius.circular(20),
          border: Border.all(
            color: AppColors.primaryPurple.withOpacity(0.3),
            width: 1,
          ),
        ),
        child: Column(
          children: [
            Text(emoji, style: const TextStyle(fontSize: 48)),
            const SizedBox(height: 12),
            Text(
              title,
              style: AppTextStyles.h2.copyWith(fontSize: 20),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 8),
            Text(
              subtitle,
              style: AppTextStyles.body.copyWith(
                color: Colors.white70,
              ),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 12),
            Text(
              hint,
              style: AppTextStyles.caption.copyWith(
                color: AppColors.accent,
              ),
              textAlign: TextAlign.center,
            ),
          ],
        ),
      ),
    )
        .animate(delay: delay.ms)
        .fadeIn(duration: 600.ms)
        .slideY(begin: 0.2, end: 0, duration: 600.ms)
        .scale(begin: const Offset(0.8, 0.8), end: const Offset(1, 1));
  }

  Widget _buildMYCModal() {
    return Dialog(
      backgroundColor: Colors.transparent,
      child: Container(
        padding: const EdgeInsets.all(24),
        decoration: BoxDecoration(
          color: AppColors.background,
          borderRadius: BorderRadius.circular(20),
          border: Border.all(
            color: AppColors.primaryPurple.withOpacity(0.3),
            width: 1,
          ),
        ),
        child: SingleChildScrollView(
          child: Column(
            mainAxisSize: MainAxisSize.min,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'üíé –ß–¢–û –¢–ê–ö–û–ï MYC?',
                style: AppTextStyles.h2.copyWith(fontSize: 22),
              ),
              const SizedBox(height: 16),
              Text(
                'MYC (Mycelium Coin) ‚Äî –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è\n–≤–∞–ª—é—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.',
                style: AppTextStyles.body.copyWith(
                  color: Colors.white70,
                ),
              ),
              const SizedBox(height: 24),
              Text(
                'üéØ –ö–ê–ö –ü–û–õ–£–ß–ê–¢–¨:',
                style: AppTextStyles.h3,
              ),
              const SizedBox(height: 12),
              _buildBulletPoint('+50 MYC - –ó–∞–≤–µ—Ä—à–∏–ª —Ç–µ—Å—Ç'),
              _buildBulletPoint('+100 MYC - –ü–æ—Å—Ç–∞–≤–∏–ª —Ü–µ–ª—å'),
              _buildBulletPoint('+200 MYC - –î–æ—Å—Ç–∏–≥ —Ü–µ–ª–∏'),
              _buildBulletPoint('+150 MYC - –ó–∞–≤–µ—Ä—à–∏–ª —É—Ä–æ–≤–µ–Ω—å'),
              _buildBulletPoint('+500 MYC - –ü—Ä–∏–≥–ª–∞—Å–∏–ª –¥—Ä—É–≥–∞'),
              const SizedBox(height: 24),
              Text(
                'üí∏ –ù–ê –ß–¢–û –¢–†–ê–¢–ò–¢–¨:',
                style: AppTextStyles.h3,
              ),
              const SizedBox(height: 12),
              _buildBulletPoint('150 MYC - AI-–∞–Ω–∞–ª–∏–∑ –¥–µ—Ç–∞–ª—å–Ω—ã–π'),
              _buildBulletPoint('200 MYC - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π –º–∞—Ç—á–∏–Ω–≥'),
              _buildBulletPoint('500 MYC - –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å —ç–∫—Å–ø–µ—Ä—Ç–∞'),
              const SizedBox(height: 24),
              Text(
                'üí° –ß–µ–º –±–æ–ª—å—à–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏,\n—Ç–µ–º –±–æ–ª—å—à–µ MYC!',
                style: AppTextStyles.body.copyWith(
                  color: AppColors.accent,
                ),
              ),
              const SizedBox(height: 24),
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  onPressed: () => Navigator.of(context).pop(),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: AppColors.primaryPurple,
                    foregroundColor: Colors.white,
                    padding: const EdgeInsets.symmetric(vertical: 16),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(12),
                    ),
                  ),
                  child: const Text('–ü–æ–Ω—è—Ç–Ω–æ!'),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildXPModal() {
    return Dialog(
      backgroundColor: Colors.transparent,
      child: Container(
        padding: const EdgeInsets.all(24),
        decoration: BoxDecoration(
          color: AppColors.background,
          borderRadius: BorderRadius.circular(20),
          border: Border.all(
            color: AppColors.primaryPurple.withOpacity(0.3),
            width: 1,
          ),
        ),
        child: SingleChildScrollView(
          child: Column(
            mainAxisSize: MainAxisSize.min,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                '‚ö° –ß–¢–û –¢–ê–ö–û–ï XP?',
                style: AppTextStyles.h2.copyWith(fontSize: 22),
              ),
              const SizedBox(height: 16),
              Text(
                'XP (Experience Points) ‚Äî –æ–ø—ã—Ç\n–¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏ —É—Ä–æ–≤–Ω–µ–π.',
                style: AppTextStyles.body.copyWith(
                  color: Colors.white70,
                ),
              ),
              const SizedBox(height: 24),
              Text(
                'üéØ –ö–ê–ö –ü–û–õ–£–ß–ê–¢–¨:',
                style: AppTextStyles.h3,
              ),
              const SizedBox(height: 12),
              _buildBulletPoint('+10 XP - –ü—Ä–æ—à–µ–ª —Ç–µ—Å—Ç'),
              _buildBulletPoint('+20 XP - –ü–æ—Å—Ç–∞–≤–∏–ª —Ü–µ–ª—å'),
              _buildBulletPoint('+50 XP - –ò–∑—É—á–∏–ª –≤—Å–µ –Ω–∞–≤—ã–∫–∏ —Å—Ñ–µ—Ä—ã'),
              _buildBulletPoint('+70 XP - –û—Ü–µ–Ω–∏–ª 8 —Å—Ñ–µ—Ä'),
              _buildBulletPoint('+10 XP - –í–µ—Ä–Ω—É–ª—Å—è –Ω–∞ —Å–ª–µ–¥. –¥–µ–Ω—å'),
              const SizedBox(height: 24),
              Text(
                'üéÆ –°–ò–°–¢–ï–ú–ê –£–†–û–í–ù–ï–ô:',
                style: AppTextStyles.h3,
              ),
              const SizedBox(height: 12),
              _buildBulletPoint('–£—Ä–æ–≤–µ–Ω—å 1 ‚Üí 2: 100 XP'),
              _buildBulletPoint('–£—Ä–æ–≤–µ–Ω—å 2 ‚Üí 3: 150 XP'),
              _buildBulletPoint('–£—Ä–æ–≤–µ–Ω—å 3 ‚Üí 4: 200 XP'),
              _buildBulletPoint('...'),
              _buildBulletPoint('–£—Ä–æ–≤–µ–Ω—å 4 ‚Üí 5: 250 XP'),
              const SizedBox(height: 8),
              Container(
                padding: const EdgeInsets.all(12),
                decoration: BoxDecoration(
                  color: AppColors.accentOrange.withOpacity(0.1),
                  borderRadius: BorderRadius.circular(8),
                ),
                child: Text(
                  'üéÆ P2P –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è!',
                  style: AppTextStyles.body.copyWith(
                    color: AppColors.accentOrange,
                    fontWeight: FontWeight.w600,
                  ),
                ),
              ),
              const SizedBox(height: 24),
              Text(
                'üí° –ß–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å,\n—Ç–µ–º –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π!',
                style: AppTextStyles.body.copyWith(
                  color: AppColors.accent,
                ),
              ),
              const SizedBox(height: 24),
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  onPressed: () => Navigator.of(context).pop(),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: AppColors.primaryPurple,
                    foregroundColor: Colors.white,
                    padding: const EdgeInsets.symmetric(vertical: 16),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(12),
                    ),
                  ),
                  child: const Text('–ü–æ–Ω—è—Ç–Ω–æ!'),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildProfileModal() {
    return Dialog(
      backgroundColor: Colors.transparent,
      child: Container(
        padding: const EdgeInsets.all(24),
        decoration: BoxDecoration(
          color: AppColors.background,
          borderRadius: BorderRadius.circular(20),
          border: Border.all(
            color: AppColors.primaryPurple.withOpacity(0.3),
            width: 1,
          ),
        ),
        child: SingleChildScrollView(
          child: Column(
            mainAxisSize: MainAxisSize.min,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'üìä –¢–í–û–ô –ü–†–û–§–ò–õ–¨',
                style: AppTextStyles.h2.copyWith(fontSize: 22),
              ),
              const SizedBox(height: 16),
              _buildProfileRow('üé≠ –¢–∏–ø:', '–°—Ç—Ä–∞—Ç–µ–≥-–í–∏–∑–∏–æ–Ω–µ—Ä'),
              const SizedBox(height: 8),
              _buildProfileRow('DISC:', 'D (–õ–∏–¥–µ—Ä)'),
              const SizedBox(height: 16),
              Text(
                'Big Five:',
                style: AppTextStyles.body.copyWith(
                  fontWeight: FontWeight.w600,
                ),
              ),
              const SizedBox(height: 8),
              _buildBulletPoint('‚Ä¢ –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å: High'),
              _buildBulletPoint('‚Ä¢ –î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å: Medium'),
              _buildBulletPoint('‚Ä¢ –≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è: High'),
              _buildBulletPoint('‚Ä¢ –î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: Low'),
              _buildBulletPoint('‚Ä¢ –ù–µ–π—Ä–æ—Ç–∏–∑–º: Low'),
              const SizedBox(height: 16),
              Text(
                '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Å—Ñ–µ—Ä—ã:',
                style: AppTextStyles.body.copyWith(
                  fontWeight: FontWeight.w600,
                ),
              ),
              const SizedBox(height: 8),
              Text(
                'üí∞ –î–µ–Ω—å–≥–∏ ‚Ä¢ üíï –û—Ç–Ω–æ—à–µ–Ω–∏—è ‚Ä¢ üéØ –¶–µ–ª–∏',
                style: AppTextStyles.body.copyWith(
                  color: AppColors.accent,
                ),
              ),
              const SizedBox(height: 24),
              Divider(color: Colors.white.withOpacity(0.2)),
              const SizedBox(height: 24),
              Text(
                'üìä 8 –°–§–ï–† –ë–ê–õ–ê–ù–°–ê',
                style: AppTextStyles.h3,
              ),
              const SizedBox(height: 16),
              // TODO: –î–æ–±–∞–≤–∏—Ç—å –ø–∞—É—Ç–∏–Ω—É/—Ä–∞–¥–∞—Ä-—á–∞—Ä—Ç
              Container(
                height: 200,
                decoration: BoxDecoration(
                  color: Colors.white.withOpacity(0.05),
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Center(
                  child: Text(
                    '[–ü–∞—É—Ç–∏–Ω–∞/—Ä–∞–¥–∞—Ä-—á–∞—Ä—Ç]',
                    style: AppTextStyles.caption.copyWith(
                      color: Colors.white60,
                    ),
                  ),
                ),
              ),
              const SizedBox(height: 16),
              _buildBulletPoint('üí∞ –î–µ–Ω—å–≥–∏: 4/10'),
              _buildBulletPoint('üíï –û—Ç–Ω–æ—à–µ–Ω–∏—è: 8/10'),
              _buildBulletPoint('üéØ –¶–µ–ª–∏: 3/10'),
              _buildBulletPoint('üè• –ó–¥–æ—Ä–æ–≤—å–µ: 6/10'),
              _buildBulletPoint('üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è: 5/10'),
              _buildBulletPoint('üìà –†–∞–∑–≤–∏—Ç–∏–µ: 7/10'),
              _buildBulletPoint('üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ: 2/10'),
              _buildBulletPoint('üîÆ –°–º—ã—Å–ª: 6/10'),
              const SizedBox(height: 24),
              Text(
                'üí° –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–º–æ–≥—É—Ç\n–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–π –ø—É—Ç—å!',
                style: AppTextStyles.body.copyWith(
                  color: AppColors.accent,
                ),
              ),
              const SizedBox(height: 24),
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  onPressed: () => Navigator.of(context).pop(),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: AppColors.primaryPurple,
                    foregroundColor: Colors.white,
                    padding: const EdgeInsets.symmetric(vertical: 16),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(12),
                    ),
                  ),
                  child: const Text('–ö—Ä—É—Ç–æ!'),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildBulletPoint(String text) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 6),
      child: Text(
        text,
        style: AppTextStyles.body.copyWith(
          color: Colors.white70,
        ),
      ),
    );
  }

  Widget _buildProfileRow(String label, String value) {
    return Row(
      children: [
        Text(
          label,
          style: AppTextStyles.body.copyWith(
            color: Colors.white60,
          ),
        ),
        const SizedBox(width: 8),
        Text(
          value,
          style: AppTextStyles.body.copyWith(
            color: Colors.white,
          ),
        ),
      ],
    );
  }
}
